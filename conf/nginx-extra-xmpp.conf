# This simple vhost is needed to be able to generate letsencrypt
# certificates for XMPP subdomains.
server {
    listen  80;
    listen [::]:80;
    server_name xmpp-upload.__DOMAIN__ muc.__DOMAIN__;
    root /dev/null;

    include /etc/nginx/conf.d/acme-challenge.conf.inc;
    include /etc/nginx/conf.d/yunohost_http_errors.conf.inc;

    access_log /var/log/nginx/__DOMAIN__-extra-xmpp-access.log;
    error_log  /var/log/nginx/__DOMAIN__-extra-xmpp-error.log;
}


# vhost dedicated to XMPP http_upload
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name xmpp-upload.__DOMAIN__;
    root /dev/null;

    location /upload/ {
        alias /var/xmpp-upload/__DOMAIN__/upload/;
        # Pass all requests to prosody, except for GET and HEAD requests.
        limit_except GET HEAD {
          proxy_pass http://localhost:5290;
        }

        include proxy_params;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'HEAD, GET, PUT, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization';
        add_header 'Access-Control-Allow-Credentials' 'true';
        client_max_body_size 105M; # Choose a value a bit higher than the max upload configured in XMPP server
    }

    include /etc/nginx/conf.d/security.conf.inc;

    ssl_certificate     /etc/yunohost/certs/__DOMAIN__/crt.pem;
    ssl_certificate_key /etc/yunohost/certs/__DOMAIN__/key.pem;


    more_set_headers "Strict-Transport-Security : max-age=63072000; includeSubDomains; preload";

    access_log /var/log/nginx/xmpp-upload.__DOMAIN__-access.log;
    error_log  /var/log/nginx/xmpp-upload.__DOMAIN__-error.log;
}

